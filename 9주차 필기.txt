웹프.9주차

웹프로그래밍에서 사용하는 웹 프로토콜은 HTTP

   1)<-- id,pw --(request)
   2)<-- webPro(02) --(request)
서버               client
   1-1)-- index.html -->(response)
   2-1)-- webPro첫페이지 -->(response)

1) -> 1-1) -> 연결 끊김 -> 2) -> 2-1) -> 연결 끊김
비효율적

response
서버가 클라이언트에게 요청에 대한 응답을 보내기 위한 객체

sendRedirect()
<%
   String URL = "http://www.naver.com";
   response.sendRedirect(URL);
%>

String URL = "http://search.naver.com/search.naver?where=nextsearch"
String keyword = request.getParameter("word");
URL += "&" + "query=" + keyword;
response.sendRedirect(URL);

URL = "http://search.naver.com/search.naver?where=nextsearch&query=JSP"

-----

out
jsp페이지 출력을 위한 객체
출력과 버퍼링에 관련된 주요 메소드를 제공

flush() : 버퍼가 다 찼을 때 혹은 버퍼가 찼건 안 찼건 버퍼를 비워서 출력함
isAutoFlush() // 대부분 이걸 사용함 -> 지시하지 않으면 true

-----

application

속성 관리-> application, page, session, request

웹 어플리케이션
-여러 개의 서블릿과 JSP로 구성되는 웹 서비스 응용 프로그램 단위
-내장 객체 application은 서블릿과 서버 간의 자료를 교환하는 여러 메소드를 제공

속성: like 전역변수

void setAttribute(String name, Object object) : 웹 응용에서 지정된 이름으로 object를 저장
Object getAttribute(String name) : 웹 응용에서 지정된 이름의 속성을 반환

Object: 자바 모든 클래스의 부모 클래스
-> 다형성
-> Object의 하위 클래스도 사용할 수 있다
-> 자바에서 사용하는 모든 클래스가 들어갈 수 있다
-> 기본 자료 유형like int등은 못 들어감
-> 참조 자료 유형만 들어갈 수 있음
-> Integer라면 형변환을 해줘야 함

-----

get으로 가져와서 -> 처리 -> set으로 저장

조회 수 관리
<%= int count = 0; %>
<%
   String scount = (String) application.getAttribute("count");

   if (scount != NULL) {
      count = Integer.parseInt(scount);
   }
   else
      count = 0;

   application.setAttribute("count", Integer.toString(++count));
   application.log("현재까지 조회 수: " + count);
%>

-----

exception

isErrorPage="true"로 지정한 경우, 이용할 수 있는 내부 객체 // 다른 8개의 내장 객체와 달리 이때만 사용할 수 있음

-----

pageContext

내장객체를 얻어올 수 있는

void forward(Srring)
void include(Srring)

get~~~메소드들 -> _jspService()에 지역변수로

-----

page

거의 사용x
자기 자신을 가리키는 객체 -> Object page = this;

-----

session

   1)<-- id,pw --(request)
   2)<-- webPro(02) --(request)
서버               client
   1-1)-- index.html -->(response)
   2-1)-- webPro첫페이지 -->(response)
계속 연결 끊김
-> id, pw를 서버나 클라이언트 둘 중 한 곳에 저장해야 함

session : 정보를 서버 쪽에 저장하는 방법
-> 시간 제한이 있음

-----

config

톰캣 환경설정과 관련된 내장객체