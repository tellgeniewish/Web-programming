/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.81
 * Generated at: 2023-11-23 07:57:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Practice_002031;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Enumeration;

public final class calc_005fresult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Enumeration");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--응용화학과 20211689 김현진\r\n");
      out.write("이 과제는 크롬에 최적화되어 있습니다.-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>계산기</title>\r\n");
      out.write("        <style>\r\n");
      out.write("            table {\r\n");
      out.write("                text-align:center; \r\n");
      out.write("                margin: auto;\r\n");
      out.write("                border-collapse : collapse;\r\n");
      out.write("                width: 33em;\r\n");
      out.write("                height: 20em;\r\n");
      out.write("            }\r\n");
      out.write("            th {   \r\n");
      out.write("                height: 55px;              \r\n");
      out.write("                font-size:40px; \r\n");
      out.write("                font-weight: bold;\r\n");
      out.write("                font-family:'Times New Roman', Times, serif;              \r\n");
      out.write("                background-color: #32CBFD;\r\n");
      out.write("            }\r\n");
      out.write("            td { \r\n");
      out.write("                width: 50%;\r\n");
      out.write("                border: 2px solid #EDEDED;\r\n");
      out.write("            }\r\n");
      out.write("            img {\r\n");
      out.write("                display: block;\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                border:0px;\r\n");
      out.write("            }\r\n");
      out.write("            .box {\r\n");
      out.write("                width: 110px;\r\n");
      out.write("                text-align:center;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      jspbook.pr31.Calculator calc = null;
      calc = (jspbook.pr31.Calculator) _jspx_page_context.getAttribute("calc", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (calc == null){
        calc = new jspbook.pr31.Calculator();
        _jspx_page_context.setAttribute("calc", calc, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("calc"), request);
      out.write("\r\n");
      out.write("	<form name=\"frm3\" method=\"post\" action=\"calc_result.jsp\">\r\n");
      out.write("                <table>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th colspan=\"2\">\r\n");
      out.write("                            CalCuLaTor\r\n");
      out.write("                        </th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <div>\r\n");
      out.write("                                <img src=\"image/cal.jpg\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <input type=\"text\" class=\"box\" value=\"");
      out.print( calc.getOp1() );
      out.write("\" name=\"first\" readonly>\r\n");
      out.write("                            <br><br>\r\n");
      out.write("                            ");
      out.print( calc.getOperator() );
      out.write("\r\n");
      out.write("                            <br><br>\r\n");
      out.write("                            <input type=\"text\" class=\"box\" value=\"");
      out.print( calc.getOp2() );
      out.write("\" name=\"second\" readonly>\r\n");
      out.write("                            <br><br>\r\n");
      out.write("                            =\r\n");
      out.write("                            <br><br>\r\n");
      out.write("                            ");
 int result = calc.calc(); 
      out.write("\r\n");
      out.write("                            ");
      out.write("\r\n");
      out.write("                            \r\n");
      out.write("                            <input type=\"text\" class=\"box\" value=\"");
      out.print( result );
      out.write("\" readonly>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th colspan=\"2\"></th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </table>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
