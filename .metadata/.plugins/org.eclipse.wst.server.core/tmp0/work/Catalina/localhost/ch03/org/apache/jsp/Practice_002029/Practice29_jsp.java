/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.81
 * Generated at: 2023-11-29 20:34:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Practice_002029;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import javax.servlet.http.HttpSession;

public final class Practice29_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>시간표 작성</title>\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

		//HttpSession session = request.getSession();
		ArrayList<String> tt_List = (ArrayList<String>) session.getAttribute("timetable");
		
		if (tt_List == null) {
			tt_List = new ArrayList<String>();
		}
		//HttpSession session = request.getSession();
        String lectureType = request.getParameter("lectureType");
        String lectureTitle = request.getParameter("lectureTitle");
        String day = request.getParameter("day");
        String time = request.getParameter("time");
        String consecutive = request.getParameter("consecutive");

        if (lectureType != null && lectureTitle != null && day != null && time != null && consecutive != null) {
            String tt_Info = lectureType + "/" + lectureTitle + "/" + day + "/" + time + "/" + consecutive;

            //ArrayList<String> tt_List = (ArrayList<String>) session.getAttribute("timetable");

            //if (tt_List == null) {
            //	tt_List = new ArrayList<String>();
            //}

            tt_List.add(tt_Info);

            session.setAttribute("timetable", tt_List);
        }

      out.write('\r');
      out.write('\n');
 int i; 
      out.write("\r\n");
      out.write("<form name=\"time_table\" method=\"post\" action=\"practice29.jsp\">\r\n");
      out.write("과목타입:\r\n");
 String[] typeNames = {"전공필수", "전공선택", "교양", "자유선택"}; 
      out.write("\r\n");
      out.write("<select name=\"lectureType\">\r\n");
      out.write("    ");
 for (i = 0; i < typeNames.length; i++) { 
      out.write("\r\n");
      out.write("    <option value=\"");
      out.print( i );
      out.write('"');
      out.write(' ');
      out.print( i == 0 ? "selected" : "" );
      out.write('>');
      out.print( typeNames[i] );
      out.write("</option>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("과목명:\r\n");
 String[] titleNames = { "웹프로그래밍", "운영체제", "소프트웨어프로그래밍", "데이터베이스개론", "자료구조", "네트워크", "창의와감성", "사회봉사" }; 
      out.write("\r\n");
      out.write("<select name=\"lectureTitle\">\r\n");
      out.write("	");
 for (i = 0; i < titleNames.length; i++) { 
      out.write("\r\n");
      out.write("    <option value=\"");
      out.print( i );
      out.write('"');
      out.write(' ');
      out.print( i == 0 ? "selected" : "" );
      out.write('>');
      out.print( titleNames[i] );
      out.write("</option>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("요일:\r\n");
 String[] days = {"월", "화", "수", "목", "금"}; 
      out.write("\r\n");
      out.write("<select name=\"day\">\r\n");
      out.write("	");
 for (i = 0; i < days.length; i++) { 
      out.write("\r\n");
      out.write("    <option value=\"");
      out.print( i );
      out.write('"');
      out.write(' ');
      out.print( i == 0 ? "selected" : "" );
      out.write('>');
      out.print( days[i] );
      out.write("</option>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("시간:\r\n");
 String[] times = {"1", "2", "3", "4", "5", "6"}; 
      out.write("\r\n");
      out.write("<select name=\"time\">\r\n");
      out.write("	");
 for (i = 0; i < times.length; i++) { 
      out.write("\r\n");
      out.write("    <option value=\"");
      out.print( i );
      out.write('"');
      out.write(' ');
      out.print( i == 0 ? "selected" : "" );
      out.write('>');
      out.print( times[i] );
      out.write("</option>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("연강여부:\r\n");
 String[] consecutives = {"1", "2", "3", "4"}; 
      out.write("\r\n");
      out.write("<select name=\"consecutive\">\r\n");
      out.write("	");
 for (i = 0; i < consecutives.length; i++) { 
      out.write("\r\n");
      out.write("    <option value=\"");
      out.print( i );
      out.write('"');
      out.write(' ');
      out.print( i == 0 ? "selected" : "" );
      out.write('>');
      out.print( consecutives[i] );
      out.write("</option>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("<input type=\"submit\" class=\"ask\" value=\"등록\">\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("<hr>\r\n");

		for (i = 0; i < tt_List.size(); i++) {
	    	out.println(tt_List.get(i) + "<br>");
		}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
