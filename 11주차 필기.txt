웹프 11주차

JSP에서의 속성관리
->application의 getAtrribute, setAtrribute

JSP는 HTTP 프로토콜을 기반으로 하고 있음

HTTP의 비연결성
왜? request한 번에 대해서 response한 번이 오고 서버와의 연결은 끊긴다
(이전 연결에 대한 정보(어디를 접속했는지 등)이 사라짐)

웹 서버에서 클라이언트가 연결이 끊기지 않다는 환상을 갖도록 함
->쿠키와 세션, application내장객체를 이용한 속성 관리을 사용함
->사용자의 정보를 쿠키나 세션에 임시로 저장함
ex)김동덕이 3시 10분에 접속함
->일정시간이 지나면 사라짐

정보를 어디에 저장하느냐 차이
-쿠키: 사용자(클라이언트) 컴퓨터에 저장
->일반 사용자와 어태커들이 구분이 안됨
->(단점)저장된 정보를 다른 사람 또는 시스템이 볼 수 있다
->보안의 문제
->중요한 정보는 서버에 저장해야 함

-세션: 서버의 메모리에 저장

쿠키
: 서버에서 만들어진 작은 정보의 단위
->name과 value로 구성된 문자열만 저장 가능
개수와 크기 제한이 있는 이유: 서버가 클라이언트를 공격할 수도 있어서

javax.servlet.http.Cookie클래스

1. 쿠키 생성(String 매개변수 2개)
Cookie cookie = new Cookie("name", "value");
-int getMaxAge(): 해당 쿠키의 최대지속 시간을 초단위로 변화, Defualt: -1, 브라우저가 종료될 때까지 쿠키 유지
-int setMaxAge(): 초단 위의 정수형이 매개변수로 들어감
	0으로 하면 바로 삭제
	-1(음수)를 지정하면 브라우저가 종료될 때 쿠키가 삭제됨
	ex)cookie.setMaxAge(2*60) // 초 단위: 2분

2. 쿠키 저장
response.addCookie(cookie);

3. 쿠키 조회
Cookie[] cookies = request.getCookies();
-cookie.getName()
-cookie.setName()

----------
세션: 클라이언트마다 각기 다른 정보를 서버에 저장하는 방식

클라이언트가 서버에 접속할 때마다 세션이 하나씩 생김
클라이언트가 웹 브라우저 종료하면 세션 삭제됨

동시에 웹에 여러 명이 접속하면, 클라이언트 별로 세션이 따로 만들어짐

long getCreationTime()
왜 long? 1970년 1월 1일 0시를 기준으로 현재 세션이 생성된 시간까지 지난 시간을 계산하여 밀리세컨드로 반환
	long mseconds = session.getCreationTime();
	Date time = new Date(mseconds);

getLastAccessedTime(): 마지막으로 접속한 시간이 언제인지 반환함
언제 사용자가 request를 서버로 마지막으로 보냈는지를 카운팅함
	long mseconds = session.getLastAccessedTime();
	Date time = new Date(mseconds);

int getMaxInactiveInterval(): 정수형으로 반환(기본값=30분(1800초))

void invalidate(): 현재 사용하는 세션을 무효화시킴
	<% session.invalidate(); %> 접속할 때마다 세션 아이디가 계속 바뀜
	원래 30분이 지나면 자동으로 바뀜!

session.removeAttribute("이름")

boolean isNew(): 세션이 새로 만들어진 것인지 반환함
이번 학기에는 잘 동작을 안 할 것! 왜? 서버와 클라이언트가 동일한 개발 환경에서는 동작 여부를 관찰하기 어렵
-----
getAttribute(String name)
setAttribute(String name, Object value)->자바 객체나 문자열

아이디가 같으면 같은 세션 /  다르면 다른 세션
세션 아이디는 바꿀 수 없음->보안
get만 있고 set은 없음

getAttributeNames(): 현재 세션에 저장된 이름들 모두 가져올 수 있다
	Enumeration<String> e = session.getAttributeNames();
